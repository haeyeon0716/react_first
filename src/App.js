function App() {
	return (
		<h1>Hello</h1>
	);
}

export default App;

/*
SSR Vs CSR

SSR -Server dide REndering
-페이지 이동시마다 일일이 서버쪽에 HTMl 파일을 요청해서 가져오는 방식
- 장점 : 초기로딩 속도가 빠름, 검색엔진 최적화 (SEO 좋음)
- 단점 : 페이지 이동시마다 일일이 서버쪽에 파일을 요청해야 되므로 페이지 깜빡거림

CSR - Client Side Rendering
- 초기에 빈 HTML 파일을 서버쪽에서 가져오고 화면에 출력될 모든 데이터를 자바스크립트로 Chunck단위의 
모든 데이터 파일 가져온 후 HTML 파일에 동적으로 출력

- 장점 : 한번ㅇ에 서브페이지포함한 모든 데이터를 불러오기 때문에 페이지 이동시마다 새롭게 파일을 요청할 필요가 없기 때문에 페이지 전환 자연스러움

-단점 : 모든 페이지에 대한 데이터를 한번에 다 가져오기 때문에 초기 로딩 속도가 SSR 박식에 비해선 늦음, 검색엔진 최적화 안됨

Real Dom (실제 돔)
-HTML 태그를 이용해서 구졸를 만들면 브라우저가 이를 해석해서 실제 DOM 형태로 객체를 만들고 화면에 렌더링

Virtual DOM (가상돔)
-브라우저에 의해 Real DOM 으로 변경되기 전 자바스크립트에 의해 메모리 상으로 가상의 DOM 을 만들어서 기존의 DOM 구조와 차이점 분석하고 바뀐 부분 다시 렌더링

JSX 
-React에서 DOM을 효율적으로 생성하기 위한 HTML의 규칙성을 따라한 자바스크립트 돔 제작 방식

*/
